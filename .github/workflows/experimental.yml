name: Experimantal

on:
  push:
    branches: [ experimental/* ]

env:
  PKG_VERSION: '0'
  RELEASE_VERSION: '1'

jobs:
  get-versions:
    name: Get versions

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract package version
        shell: bash
        run: |
          ROOT_PATH="${1-.}"
          PKG_JSON_PATH="${ROOT_PATH}/package.json"
          PKG_VERSION=$(jq -r '.version' < "${PKG_JSON_PATH}")
          echo "PKG_VERSION=v${PKG_VERSION}" >> $GITHUB_ENV

      - name: Extract release version
        id: rel
        run: |
          RELEASE_VERSION="v0.3.0"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
        shell: bash

      - name: Print extracted versions
        shell: bash
        run: |
          echo "Package version is ${{ env.PKG_VERSION }}"
          echo "Release version is ${{ env.RELEASE_VERSION }}"
  
  compare-versions:
    name: Compare versions

    needs: get-versions

    runs-on: ubuntu-latest

    steps:
      - name: Compare versions
        run: |
          if [ "${{ env.PKG_VERSION }}" != "${{ env.RELEASE_VERSION }}" ]; then
            echo "Version mismatch: package.json version (${{ env.PKG_VERSION }}) does not match release version (${{ env.RELEASE_VERSION }})"
            exit 1
          else
            echo "Version match: package.json version (${{ env.PKG_VERSION }}) matches release version (${{ env.RELEASE_VERSION }})"
          fi
        shell: bash
